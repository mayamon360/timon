var antes = (new Date).getTime();

function tdc() {
    return ((new Date).getTime() - antes) / 1e3 + "s"
}
window.onload = function() {
    document.getElementById("timeload").innerHTML = "CARGA: " + tdc()
};
document.write(`<style> @keyframes appdebugfadeininternal { 0% { opacity: 0; } 100% { opacity: 1; } } @keyframes appdebugfadein { 0% { transform: translateY(100px); } 100% { transform: translateY(0px); } } #debug { z-index: 1049 !important; position: fixed!important; bottom: 0; width:100%; opacity:.5; transform: translateY(100px); background: #000!important; color: #FFF!important; font-size: .7rem; font-weight: 700; font-family: 'Nunito', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif!important; animation: appdebugfadein 0.5s ease-in-out 0.1s forwards; } #debug > div { opacity: 0; animation: appdebugfadeininternal 0.5s ease-in-out 0.7s forwards; } #appframeworkdebugtimeload { width: 100%; position: absolute; margin: 0 auto; } #appframeworkdebugtimeload> a > img { max-height: 25px!important; display: block; margin: 0 auto; } </style> <div id="debug" class="py-2"> <div class="container-fluid"><div class="row"> <div id="timeload" class="col-12 col-sm-6 text-center text-sm-left"></div><div id="ajaxdebug" class="col-12 col-sm-6 text-center text-sm-right">AJAX DEBUG</div></div></div></div>`);
var xml_type;
if (console.log("%c DEBUG ACTIVO", "color: #000; font-weight: bold;"), function(e) {
        XMLHttpRequest.prototype.open = function() {
            this.addEventListener("readystatechange", function() {
                if (4 == this.readyState)
                    if (200 == this.status) console.log("%c RESPUESTA: " + this.response, "color: grey#;"), document.getElementById("timeload").innerHTML = "ESTADO: " + this.status, document.getElementById("ajaxdebug").innerHTML = "RESPUESTA: " + this.response;
                    else {
                        var e = window.open(" ", "Framework - AJAX Error");
                        e.document.write(this.responseText), e.document.close(), e.document.title = "AJAX Error"
                    }
            }, !1), e.apply(this, arguments)
        }
    }(XMLHttpRequest.prototype.open), window.XMLHttpRequest && !window.ActiveXObject) xml_type = "XMLHttpRequest";
else if (window.ActiveXObject) try {
    a = new ActiveXObject("Msxml2.XMLHTTP"), xml_type = "Msxml2.XMLHTTP"
} catch (e) {
    a = new ActiveXObject("Microsoft.XMLHTTP"), xml_type = "Microsoft.XMLHTTP"
}
var ActiveXObject, ActualActiveXObject = window.ActiveXObject;
"XMLHttpRequest" == xml_type ? function(e) {
    XMLHttpRequest.prototype.open = function(t, a, n, s, o) {
        console.warn("PETICIÓN " + t + " realizada a " + a), document.getElementById("ajaxdebug").innerHTML = "PETICIÓN " + t + " realizada a " + a, e.call(this, t, a, n, s, o)
    }
}(XMLHttpRequest.prototype.open) : ActiveXObject = function(e) {
    var t, a, n = new ActualActiveXObject(e);
    if ("microsoft.xmlhttp" == e.toLowerCase())(s = {
        _ax: n,
        _status: "fake",
        responseText: "",
        responseXml: null,
        readyState: 0,
        dataType: "plain",
        status: 0,
        statusText: 0,
        onReadyStateChange: null,
        onreadystatechange: null
    })._onReadyStateChange = (a = s, function() {
        a.readyState = a._ax.readyState, 4 == a.readyState && (a.responseText = a._ax.responseText, a.responseXml = a._ax.responseXml, a.status = a._ax.status, a.statusText = a._ax.statusText), a.onReadyStateChange && a.onReadyStateChange(), a.onreadystatechange && a.onreadystatechange()
    }), s.open = function(e, t, a, n, s) {
        return this._ax.onReadyStateChange = this._onReadyStateChange, this._ax.onreadystatechange = this._onReadyStateChange, console.warn("PETICIÓN " + e + " realizada a " + t), document.getElementById("ajaxdebug").innerHTML = "PETICIÓN " + method + " realizada a " + url, this._ax.open(e, t, a, n, s)
    }, s.send = function(e) {
        return this._ax.send(e)
    }, s.abort = function() {
        return this._ax.abort()
    }, s.setRequestHeader = function(e, t) {
        return this._ax.setRequestHeader(e, t)
    }, s.setrequestheader = function(e, t) {
        return this._ax.setRequestHeader(e, t)
    }, s.getResponseHeader = function(e) {
        return this._ax.getResponseHeader(e)
    }, s.getresponseheader = function(e) {
        return this._ax.getResponseHeader(e)
    };
    else if ("msxml2.xmlhttp" == e.toLowerCase()) {
        (s = {
            _ax: n,
            _status: "fake",
            responseText: "",
            responseXml: null,
            readyState: 0,
            dataType: "plain",
            status: 0,
            statusText: 0,
            onReadyStateChange: null,
            onreadystatechange: null
        })._onReadyStateChange = (t = s, function() {
            t.readyState = t._ax.readyState, 4 == t.readyState && (t.responseText = t._ax.responseText, t.responseXml = t._ax.responseXml, t.status = t._ax.status, t.statusText = t._ax.statusText), t.onReadyStateChange && t.onReadyStateChange(), t.onreadystatechange && t.onreadystatechange()
        }), s.open = function(e, t, a, n, s) {
            return this._ax.onReadyStateChange = this._onReadyStateChange, this._ax.onreadystatechange = this._onReadyStateChange, console.warn("PETICIÓN " + e + " realizada a " + t), document.getElementById("ajaxdebug").innerHTML = "PETICIÓN " + method + " realizada a " + url, this._ax.open(e, t, a, n, s)
        }, s.send = function(e) {
            return this._ax.send(e)
        }, s.abort = function() {
            return this._ax.abort()
        }, s.setRequestHeader = function(e, t) {
            return this._ax.setRequestHeader(e, t)
        }, s.setrequestheader = function(e, t) {
            return this._ax.setRequestHeader(e, t)
        }, s.getResponseHeader = function(e) {
            return this._ax.getResponseHeader(e)
        }, s.getresponseheader = function(e) {
            return this._ax.getResponseHeader(e)
        }
    } else var s = n;
    return s
};